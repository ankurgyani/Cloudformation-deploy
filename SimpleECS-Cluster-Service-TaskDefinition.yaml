Parameters:
  PlatformVersion: 
    Default: 1.4.0
    Type: String
  SecurityGroups:
    Description: Security group with port 80 open
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: sg-eb4084a5
  PublicSubnets:
    Description: Choose Public subnets with has IGW
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-8c9c0ba2 , subnet-a8891cf4

Resources:
  MyECSCluster:
    Type: 'AWS::ECS::Cluster'
  MyTaskDef:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Memory: 512
      Cpu: 256
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Image: gyania/flaskdemo:flask-helloworld
          Name:  flask-hello-world
          Memory: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 5000
              HostPort: 5000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref 'AWS::Region'
              awslogs-group: /ecs/flask-helloworld
              awslogs-stream-prefix: flask-helloworld
              awslogs-create-group: 'true'
      RequiresCompatibilities: 
        - "EC2"
        - "FARGATE" 
      ExecutionRoleArn: !Join [ '' , [ 'arn:aws:iam::' , !Ref 'AWS::AccountId' , ':role/' , 'ecsTaskExecutionRole' ]] 
      # TaskRoleArn: !Join [ '' , [ 'arn:aws:iam::' , !Ref 'AWS::AccountId' , ':role/' , 'ddTaskRole' ]] 

  MyECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref MyECSCluster
      DesiredCount: '1'
      LaunchType: FARGATE
      TaskDefinition: !Ref MyTaskDef
      PlatformVersion: !Ref PlatformVersion
      NetworkConfiguration: 
        AwsvpcConfiguration: 
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroups
          Subnets: !Ref PublicSubnets
          
